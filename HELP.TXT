0.注释:用于在代码中添加注释。注释不会被执行，只是对代码的解释说明。
    ;注释内容
1.FUNC:通过这个指令，你可以定义一个可以被跳转的代码区块。
    FUNC [NAME]
    *结束标记：另一个函数或文件结束
2.TYPE:这个指令用于标明要保存的数据的类型。
    TYPE [INT（高精整数） | STR（字符串） | BOOL（布尔值） | DOUBLE（双精度浮点数） | FLOAT（浮点数） | CHAR（字符）]
3.PUSH:这个指令用于将数据推入栈顶。
    PUSH [DATA]
4.OUT:用于将栈顶的数据输出。
    OUT
5.ENDL:用于输出一个换行符。
    ENDL
6.PUSHCOMMENT:将一个分号字符";"推入字符栈的栈顶。
    PUSHCOMMENT
7.POP:从栈中移除栈顶元素。
    POP
8.ADD:取出栈顶的元素，与下一个栈顶元素相加，并将结果推回栈顶。对于布尔类型，加法表示逻辑“或”操作。
    ADD
9.SUB:取出栈顶的元素，与下一个栈顶元素相减，并将结果推回栈顶。对于布尔类型，减法表示逻辑“异或”操作。对于字符串类型，减法会导致错误。
    SUB
10.MUL:取出栈顶的元素，与下一个栈顶元素相乘，并将结果推回栈顶。对于布尔类型，乘法表示逻辑“与”操作。对于字符串类型，乘法会导致错误。
    MUL
11.DIV:取出栈顶的元素，与下一个栈顶元素相除，并将结果推回栈顶。字符串、布尔类型或字符类型无法进行除法操作。
    DIV
12.MOD: 取出栈顶的元素，与下一个栈顶元素进行取模运算，并将结果推回栈顶。仅适用于整数类型。
    MOD
13.IN:从输入中读取一个变量的值，并将其推入栈顶。
    IN
14.VAR:声明一个变量，如果变量已存在，则不变。
    VAR [NAME]
15.GETVAR:查找名为 [VARNAME] 的变量，然后将其值赋给栈顶元素，并弹栈。
    GETVAR [VARNAME]
16.PUSHVAR:将变量推入栈顶。
    PUSHVAR [VARNAME]
17.IFE:比较栈顶元素与次栈顶元素是否相等，如果相等，将真值推入布尔栈。
    IFE
18.IFB:比较栈顶元素与次栈顶元素，判断是否栈顶元素较大，如果是，将真值推入布尔栈。
    IFB
19.IFS:比较栈顶元素与次栈顶元素，判断是否次栈顶元素较大，如果是，将真值推入布尔栈。
    IFS
20.GOTO:跳转到指定的代码块。
    GOTO [NAME]
21.IF: 如果布尔栈的栈顶为真，跳转到指定标签。如果标签是 "RET"，函数将退出。
    IF [NAME]
22.EXIT:退出整个程序。
    EXIT
23.RAND: 将一个指定范围内的随机整数推入整数栈。
    RAND [NUM1] [NUM2]
    *从 NUM1 开始，到 NUM1+NUM2 结束
24.CLEAR: 清空栈中所有的数据。
    CLEAR
25.NOT:对布尔栈顶进行“非”运算。
    NOT
26.GTVAR:接受一个string形VAR，然后GOTO到该变量的值。
    条件：TYPE STR
    GTVAR [VARNAME]
27.NEWVAR:新建一个VAR，如果VAR已经存在，则覆盖为0。
    NEWVAR [VARNAME]
28.FOR:将int变量[VARNAME]设为[START],再累加到[END],每次累加1，并执行函数[FUNCNAME]。
    PUSH [END]
    PUSH [START]
    FOR [VARNAME] [FUNCNAME]